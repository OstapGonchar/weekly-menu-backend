{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/day-table/day-table.component.css","webpack:///./src/app/day-table/day-table.component.html","webpack:///./src/app/day-table/day-table.component.ts","webpack:///./src/app/day-table/day.ts","webpack:///./src/app/weekly-menu.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".fill-remaining-space {\\r\\n    /* This fills the remaining space, by using flexbox. \\r\\n       Every toolbar row uses a flexbox row layout. */\\r\\n    flex: 1 1 auto;\\r\\n  }\"","module.exports = \"<div>\\r\\n  <mat-toolbar color=\\\"accent\\\" role=\\\"header\\\">\\r\\n    <h1>{{title}}</h1>\\r\\n    <span class=\\\"fill-remaining-space\\\"></span>\\r\\n    <span>Ostap Gonchar</span>\\r\\n  </mat-toolbar>\\r\\n\\r\\n  <mat-grid-list [cols]=4 rowHeight=\\\"50px\\\">\\r\\n    <mat-grid-tile>\\r\\n      <mat-form-field>\\r\\n        <mat-select [ngModel]=\\\"selectedWeekId\\\" (ngModelChange)=\\\"showInfo($event)\\\">\\r\\n          <mat-option *ngFor=\\\"let weekDesc of weekDescs\\\" [value]=\\\"weekDesc.id\\\">\\r\\n            {{ weekDesc.desc }}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </mat-grid-tile>\\r\\n    <mat-grid-tile>\\r\\n      <h3 *ngIf=\\\"week != undefined\\\">Selected Week: {{ week.desc }}</h3>\\r\\n    </mat-grid-tile>\\r\\n    <mat-grid-tile>\\r\\n      <button mat-button color=\\\"primary\\\" (click)=\\\"addExtra()\\\">Add One More</button>\\r\\n    </mat-grid-tile>\\r\\n    <mat-grid-tile>\\r\\n      <button mat-button color=\\\"primary\\\" (click)=\\\"save()\\\">Save</button>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n\\r\\n  <mat-grid-list *ngIf=\\\"week != undefined\\\" [cols]=\\\"mobileQuery.matches ? 1 : 7\\\" [rowHeight]=\\\"mobileQuery.matches ? '1:1' : '1:1.6'\\\">\\r\\n    <mat-grid-tile>\\r\\n      <app-day-table [(day)]=\\\"week.monday\\\"></app-day-table>\\r\\n    </mat-grid-tile>\\r\\n    <mat-grid-tile>\\r\\n      <app-day-table [day]=\\\"week.tuesday\\\"></app-day-table>\\r\\n    </mat-grid-tile>\\r\\n    <mat-grid-tile>\\r\\n      <app-day-table [day]=\\\"week.wednesday\\\"></app-day-table>\\r\\n    </mat-grid-tile>\\r\\n    <mat-grid-tile>\\r\\n      <app-day-table [day]=\\\"week.thursday\\\"></app-day-table>\\r\\n    </mat-grid-tile>\\r\\n    <mat-grid-tile>\\r\\n      <app-day-table [day]=\\\"week.friday\\\"></app-day-table>\\r\\n    </mat-grid-tile>\\r\\n    <mat-grid-tile>\\r\\n      <app-day-table [day]=\\\"week.saturday\\\"></app-day-table>\\r\\n    </mat-grid-tile>\\r\\n    <mat-grid-tile>\\r\\n      <app-day-table [day]=\\\"week.sunday\\\"></app-day-table>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</div>\"","import { Component, OnDestroy, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { Week } from './week';\r\nimport { WeeklyMenuService } from './weekly-menu.service';\r\nimport { WeekDesc } from './week-desc';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  mobileQuery: MediaQueryList;\r\n  title = 'Weekly Menu';\r\n  week: Week;\r\n  selectedWeekId: number;\r\n  weekDescs: Array<WeekDesc> = [];\r\n\r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(private weeklyMenuService: WeeklyMenuService, changeDetectorRef: ChangeDetectorRef, media: MediaMatcher) {\r\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.weeklyMenuService.getWeekDescs()\r\n      .subscribe(weekDescs => this.weekDescs = weekDescs);\r\n    this.weeklyMenuService.getCurrentWeek()\r\n      .subscribe(week => {\r\n        this.week = week;\r\n        this.selectedWeekId = this.week.id;\r\n      });\r\n  }\r\n\r\n  showInfo(id: number) {\r\n    this.weeklyMenuService.getWeek(id)\r\n      .subscribe(week => this.week = week);\r\n  }\r\n\r\n  save() {\r\n    this.weeklyMenuService.save(this.week);\r\n  }\r\n\r\n  addExtra() {\r\n    this.weeklyMenuService.addExtra();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AppComponent } from './app.component';\r\nimport {\r\n  MatInputModule,\r\n  MatButtonModule,\r\n  MatSelectModule,\r\n  MatIconModule,\r\n  MatSidenavModule,\r\n  MatCheckboxModule,\r\n  MatToolbarModule,\r\n  MatNavList,\r\n  MatListModule,\r\n  MatGridListModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatCardModule\r\n} from '@angular/material';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DayTableComponent } from './day-table/day-table.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DayTableComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatCardModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".day-table-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n  \\r\\n.day-table-container > * {\\r\\n    width: 100%;\\r\\n}\"","module.exports = \"<mat-card style=\\\"padding: 15px;\\\">\\r\\n  <div class=\\\"day-table-container\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"{{day.dayOfWeek}}\\\" [value]=\\\"day.date\\\" readonly>\\r\\n      <mat-datepicker #picker></mat-datepicker>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <textarea matInput placeholder=\\\"Breakfast\\\" [(ngModel)]=\\\"day.breakfast\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <textarea matInput placeholder=\\\"Lunch\\\" [(ngModel)]=\\\"day.lunch\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <textarea matInput placeholder=\\\"Dinner\\\" [(ngModel)]=\\\"day.dinner\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n</mat-card>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Day } from './day';\r\n\r\n@Component({\r\n  selector: 'app-day-table',\r\n  templateUrl: './day-table.component.html',\r\n  styleUrls: ['./day-table.component.css']\r\n})\r\nexport class DayTableComponent implements OnInit {\r\n  @Input()\r\n  day: Day = new Day;\r\n  @Output() dayChange = new EventEmitter<Day>();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export class Day {\r\n    date: Date;\r\n    dayOfWeek: string;\r\n    breakfast: string;\r\n    lunch: string;\r\n    dinner: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { WeekDesc } from './week-desc';\r\nimport { Week } from './week';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WeeklyMenuService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  save(week: Week): void {\r\n    this.http.post('/week', week, httpOptions)\r\n      .subscribe(\r\n        res => {\r\n          console.log(res);\r\n        },\r\n        err => {\r\n          console.log('Error occured');\r\n        }\r\n      );\r\n  }\r\n\r\n  public getWeekDescs(): Observable<Array<WeekDesc>> {\r\n    return this.http.get<Array<WeekDesc>>('/week/week-desc');\r\n  }\r\n\r\n  public getWeek(id: number): Observable<Week> {\r\n    return this.http.get<Week>(`/week/${id}`);\r\n  }\r\n\r\n  public getCurrentWeek(): Observable<Week> {\r\n    return this.http.get<Week>('/week/current');\r\n  }\r\n\r\n  public addExtra(): void {\r\n    this.http.get('/week/add-extra')\r\n      .subscribe(\r\n        res => {\r\n          console.log(res);\r\n        },\r\n        err => {\r\n          console.log('Error occured');\r\n        }\r\n      );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}